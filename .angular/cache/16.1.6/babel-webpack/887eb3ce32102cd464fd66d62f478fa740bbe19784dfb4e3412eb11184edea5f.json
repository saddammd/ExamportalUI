{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LessonService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.baseUrl = \"http://localhost:5000/examportal/examportal/lesson\";\n    this.videoUrl = \"http://localhost:5000/examportal/videos/video\";\n    this.mcqurl = \"http://localhost:5000/examportal/mcq/mcq\";\n  }\n  getLessonList() {\n    return this.httpclient.get(this.baseUrl);\n  }\n  postLesson(name) {\n    // Make the POST request to your API\n    return this.httpclient.post(this.baseUrl, name);\n  }\n  putLesson(editChapterName) {\n    return this.httpclient.put(this.baseUrl, editChapterName);\n  }\n  postVideo(lesson) {\n    return this.httpclient.post(this.videoUrl, lesson);\n  }\n  postMcq(addmcq) {\n    return this.httpclient.post(this.mcqurl, addmcq);\n  }\n  getMcqByLessonId(id) {\n    return this.httpclient.get(this.mcqurl + \"/\" + id);\n  }\n}\nLessonService.ɵfac = function LessonService_Factory(t) {\n  return new (t || LessonService)(i0.ɵɵinject(i1.HttpClient));\n};\nLessonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LessonService,\n  factory: LessonService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LessonService","constructor","httpclient","baseUrl","videoUrl","mcqurl","getLessonList","get","postLesson","name","post","putLesson","editChapterName","put","postVideo","lesson","postMcq","addmcq","getMcqByLessonId","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Saddam Hussain\\Desktop\\Japanese Website 2\\nihongoShiksha\\src\\app\\services\\lesson.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LessonResponse } from '../classes/lesson-response';\nimport { Data } from '../classes/data';\nimport { chapter } from '../classes/chapter';\nimport { Lesson } from '../classes/lesson';\nimport { Addmcq } from '../classes/addmcq';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LessonService {\n \n  \n\n  \n  \n  constructor(private httpclient: HttpClient) { }\n\n  private baseUrl = \"http://localhost:5000/examportal/examportal/lesson\"\n  private videoUrl = \"http://localhost:5000/examportal/videos/video\"\n  private mcqurl = \"http://localhost:5000/examportal/mcq/mcq\"\n\n\n  getLessonList(): Observable<Data>{\n      return this.httpclient.get<Data>(this.baseUrl);\n  }\n\n  postLesson(name: chapter) {\n    // Make the POST request to your API\n    return this.httpclient.post(this.baseUrl, name);\n  }\n\n  putLesson(editChapterName: chapter) {\n  return this.httpclient.put(this.baseUrl, editChapterName);\n  \n  }\n\n  postVideo(lesson: Lesson) {\n    return this.httpclient.post(this.videoUrl, lesson);\n  }\n\n  postMcq(addmcq: Addmcq) {\n    return this.httpclient.post(this.mcqurl, addmcq);\n  }\n\n  getMcqByLessonId(id:number){\n    return this.httpclient.get(this.mcqurl + \"/\" +id);\n  }\n}\n"],"mappings":";;AAYA,OAAM,MAAOA,aAAa;EAMxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAEtB,KAAAC,OAAO,GAAG,oDAAoD;IAC9D,KAAAC,QAAQ,GAAG,+CAA+C;IAC1D,KAAAC,MAAM,GAAG,0CAA0C;EAJb;EAO9CC,aAAaA,CAAA;IACT,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAO,IAAI,CAACJ,OAAO,CAAC;EAClD;EAEAK,UAAUA,CAACC,IAAa;IACtB;IACA,OAAO,IAAI,CAACP,UAAU,CAACQ,IAAI,CAAC,IAAI,CAACP,OAAO,EAAEM,IAAI,CAAC;EACjD;EAEAE,SAASA,CAACC,eAAwB;IAClC,OAAO,IAAI,CAACV,UAAU,CAACW,GAAG,CAAC,IAAI,CAACV,OAAO,EAAES,eAAe,CAAC;EAEzD;EAEAE,SAASA,CAACC,MAAc;IACtB,OAAO,IAAI,CAACb,UAAU,CAACQ,IAAI,CAAC,IAAI,CAACN,QAAQ,EAAEW,MAAM,CAAC;EACpD;EAEAC,OAAOA,CAACC,MAAc;IACpB,OAAO,IAAI,CAACf,UAAU,CAACQ,IAAI,CAAC,IAAI,CAACL,MAAM,EAAEY,MAAM,CAAC;EAClD;EAEAC,gBAAgBA,CAACC,EAAS;IACxB,OAAO,IAAI,CAACjB,UAAU,CAACK,GAAG,CAAC,IAAI,CAACF,MAAM,GAAG,GAAG,GAAEc,EAAE,CAAC;EACnD;;AArCWnB,aAAa,C;mBAAbA,aAAa,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAbvB,aAAa,C;SAAbA,aAAa;EAAAwB,OAAA,EAAbxB,aAAa,CAAAyB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}