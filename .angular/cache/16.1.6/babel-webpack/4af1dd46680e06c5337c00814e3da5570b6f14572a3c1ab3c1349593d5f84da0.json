{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/exercises-value.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/result.service\";\nimport * as i4 from \"@angular/common\";\nfunction ResultComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"a\", 5);\n    i0.ɵɵtext(7, \"View Result\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const res_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", res_r1.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(res_r1.createdDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/members/lessons/resultdetail/\", res_r1.id, \"\");\n  }\n}\nexport class ResultComponent {\n  constructor(exercises, routes, resultService) {\n    this.exercises = exercises;\n    this.routes = routes;\n    this.resultService = resultService;\n  }\n  ngOnInit() {\n    this.loadResult();\n  }\n  loadResult() {\n    const urlId = this.routes.snapshot.paramMap.get('id');\n    const id = +urlId;\n    this.resultService.getResultList(id + 1).subscribe(data => {\n      this.resultCollectionResponse = data;\n      console.log(this.resultCollectionResponse.resultResponse.content[0]);\n    });\n  }\n}\nResultComponent.ɵfac = function ResultComponent_Factory(t) {\n  return new (t || ResultComponent)(i0.ɵɵdirectiveInject(i1.ExercisesValueService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ResultService));\n};\nResultComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResultComponent,\n  selectors: [[\"app-result\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"table\", \"table-striped\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [3, \"routerLink\"]],\n  template: function ResultComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Test Results\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"div\", 0)(4, \"table\", 1)(5, \"thead\")(6, \"tr\")(7, \"th\", 2);\n      i0.ɵɵtext(8, \"No.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 2);\n      i0.ɵɵtext(10, \"Test Taken Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 2);\n      i0.ɵɵtext(12, \"View Result\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, ResultComponent_tr_14_Template, 8, 3, \"tr\", 3);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.resultCollectionResponse.resultResponse.content);\n    }\n  },\n  dependencies: [i4.NgForOf, i2.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","res_r1","id","ɵɵtextInterpolate","createdDate","ɵɵpropertyInterpolate1","ResultComponent","constructor","exercises","routes","resultService","ngOnInit","loadResult","urlId","snapshot","paramMap","get","getResultList","subscribe","data","resultCollectionResponse","console","log","resultResponse","content","ɵɵdirectiveInject","i1","ExercisesValueService","i2","ActivatedRoute","i3","ResultService","selectors","decls","vars","consts","template","ResultComponent_Template","rf","ctx","ɵɵtemplate","ResultComponent_tr_14_Template","ɵɵproperty"],"sources":["C:\\Users\\Saddam Hussain\\Desktop\\Japanese Website 2\\nihongoShiksha\\src\\app\\layout\\result\\result.component.ts","C:\\Users\\Saddam Hussain\\Desktop\\Japanese Website 2\\nihongoShiksha\\src\\app\\layout\\result\\result.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ResultCollectionResponse } from 'src/app/classes/resultCollectionResponse';\nimport { ResultResponse } from 'src/app/classes/resultResponse';\nimport { ExercisesValueService } from 'src/app/services/exercises-value.service';\nimport { ResultService } from 'src/app/services/result.service';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\nexport class ResultComponent {\n  result!: string;\n  resultCollectionResponse!: ResultCollectionResponse;\n\n\n  constructor(private exercises: ExercisesValueService,\n              private routes: ActivatedRoute,\n              private resultService: ResultService){\n\n}\n\n\nngOnInit(): void {\n\n    this.loadResult();\n}\n\nloadResult(){\n  const urlId = this.routes.snapshot.paramMap.get('id');\n  const id = +urlId!\n  this.resultService.getResultList(id+1).subscribe(data=>{\n    this.resultCollectionResponse = data;\n    console.log(this.resultCollectionResponse.resultResponse.content[0]);\n  })\n\n}\n\n}\n","<h2>Test Results</h2>\n<div>\n    <div class=\"container mt-4\">\n        \n        <table class=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">No.</th>\n                    <th scope=\"col\">Test Taken Date</th>\n                    <th scope=\"col\">View Result</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let res of resultCollectionResponse.resultResponse.content\">\n                    <th scope=\"row\"> {{res.id}}</th>\n                    <td>{{res.createdDate}}</td>\n        \n                    <td>\n                        <a routerLink=\"/members/lessons/resultdetail/{{res.id}}\">View Result</a></td>\n                </tr>\n                <!-- Add more rows as needed -->\n            </tbody>\n        </table>\n    </div>\n</div>"],"mappings":";;;;;;;ICagBA,EAAA,CAAAC,cAAA,SAAwE;IACnDD,EAAA,CAAAE,MAAA,GAAU;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAChCH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAE5BH,EAAA,CAAAC,cAAA,SAAI;IACyDD,EAAA,CAAAE,MAAA,kBAAW;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAJ3DH,EAAA,CAAAI,SAAA,GAAU;IAAVJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,EAAA,KAAU;IACvBP,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAQ,iBAAA,CAAAF,MAAA,CAAAG,WAAA,CAAmB;IAGhBT,EAAA,CAAAI,SAAA,GAAqD;IAArDJ,EAAA,CAAAU,sBAAA,iDAAAJ,MAAA,CAAAC,EAAA,KAAqD;;;ADNhF,OAAM,MAAOI,eAAe;EAK1BC,YAAoBC,SAAgC,EAChCC,MAAsB,EACtBC,aAA4B;IAF5B,KAAAF,SAAS,GAATA,SAAS;IACT,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,aAAa,GAAbA,aAAa;EAEnC;EAGAC,QAAQA,CAAA;IAEJ,IAAI,CAACC,UAAU,EAAE;EACrB;EAEAA,UAAUA,CAAA;IACR,MAAMC,KAAK,GAAG,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACrD,MAAMd,EAAE,GAAG,CAACW,KAAM;IAClB,IAAI,CAACH,aAAa,CAACO,aAAa,CAACf,EAAE,GAAC,CAAC,CAAC,CAACgB,SAAS,CAACC,IAAI,IAAE;MACrD,IAAI,CAACC,wBAAwB,GAAGD,IAAI;MACpCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,wBAAwB,CAACG,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC;EAEJ;;AAzBalB,eAAe,C;mBAAfA,eAAe,EAAAX,EAAA,CAAA8B,iBAAA,CAAAC,EAAA,CAAAC,qBAAA,GAAAhC,EAAA,CAAA8B,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAAlC,EAAA,CAAA8B,iBAAA,CAAAK,EAAA,CAAAC,aAAA;AAAA;AAAfzB,eAAe,C;QAAfA,eAAe;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCZ5B3C,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,mBAAY;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACrBH,EAAA,CAAAC,cAAA,UAAK;MAM+BD,EAAA,CAAAE,MAAA,UAAG;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACxBH,EAAA,CAAAC,cAAA,YAAgB;MAAAD,EAAA,CAAAE,MAAA,uBAAe;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACpCH,EAAA,CAAAC,cAAA,aAAgB;MAAAD,EAAA,CAAAE,MAAA,mBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAGxCH,EAAA,CAAAC,cAAA,aAAO;MACHD,EAAA,CAAA6C,UAAA,KAAAC,8BAAA,gBAMK;MAET9C,EAAA,CAAAG,YAAA,EAAQ;;;MARgBH,EAAA,CAAAI,SAAA,IAAkD;MAAlDJ,EAAA,CAAA+C,UAAA,YAAAH,GAAA,CAAAnB,wBAAA,CAAAG,cAAA,CAAAC,OAAA,CAAkD"},"metadata":{},"sourceType":"module","externalDependencies":[]}